//https://igorkhripunov.medium.com/using-quarkus-resolvers-with-aws-amplify-e7bbd26fad6c
plugins {
    id 'java'
    id 'io.quarkus' version "$quarkusPlatformVersion"
}

group 'green.zerolabs'
version '00.00.01-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation enforcedPlatform("${quarkusPlatformGroupId}:quarkus-amazon-services-bom:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-amazon-lambda'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkiverse.amazonservices:quarkus-amazon-s3'
    implementation 'io.quarkus:quarkus-mutiny'
    implementation 'software.amazon.awssdk:netty-nio-client'
    implementation 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'

}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

test {
    //https://stackoverflow.com/questions/21406265/how-to-give-system-property-to-my-test-via-gradle-and-d
    //gradle :test --tests "example.LambdaRequestHandlerTest" -Daws.accessKeyId=__ACCESS_KEY__ -Daws.secretAccessKey=__SECRET__
    systemProperty "aws.accessKeyId", System.getProperty("aws.accessKeyId")
    systemProperty "aws.secretAccessKey", System.getProperty("aws.secretAccessKey")
}

jar.archiveBaseName = 'latest_build'

task unzip(type: Copy) {
    def zipFile = file("${buildDir}/function.zip")
    def outputDir = file("${buildDir}/unpacked/dist")

    from zipTree(zipFile)
    into outputDir
}

task buildZip(type: Zip, dependsOn: 'unzip') {
    from "${buildDir}/unpacked/dist"

    archiveFileName = 'latest_build.zip'
}

build.dependsOn buildZip
