####
# Then, build the image with:
#
# docker build -f Dockerfile.aws-amplify -t zerolabs/aws-amplify-poc .
#
# Then run the container using:
#
# docker run -i --rm --network host zerolabs/aws-amplify-poc
#
###
FROM node:current
RUN docker-entrypoint.sh npm install -g @aws-amplify/cli

RUN set -ex; \
	apt-get update; \
	apt-get install -y --no-install-recommends \
		vim \
		software-properties-common \
	; \
	wget -O- https://apt.corretto.aws/corretto.key | apt-key add - ; \
	add-apt-repository 'deb https://apt.corretto.aws stable main' ; \
	apt-get update; \
	apt-get install -y --no-install-recommends \
		java-11-amazon-corretto-jdk \
	; \
	rm -rf /var/lib/apt/lists/*

ENV GRADLE_HOME /opt/gradle

RUN set -o errexit -o nounset \
    && apt-get update \
    && apt-get install --yes --no-install-recommends \
        unzip \
        wget \
        \
        bzr \
        git \
        git-lfs \
        mercurial \
        openssh-client \
        subversion \
    && rm --recursive --force /var/lib/apt/lists/* \
    \
    && echo "Testing VCSes" \
    && which bzr \
    && which git \
    && which git-lfs \
    && which hg \
    && which svn

ENV GRADLE_VERSION 7.4
ARG GRADLE_DOWNLOAD_SHA256=8cc27038d5dbd815759851ba53e70cf62e481b87494cc97cfd97982ada5ba634
RUN set -o errexit -o nounset \
    && echo "Downloading Gradle" \
    && wget --no-verbose --output-document=gradle.zip "https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip" \
    \
    && echo "Checking download hash" \
    && echo "${GRADLE_DOWNLOAD_SHA256} *gradle.zip" | sha256sum --check - \
    \
    && echo "Installing Gradle" \
    && unzip gradle.zip \
    && rm gradle.zip \
    && mv "gradle-${GRADLE_VERSION}" "${GRADLE_HOME}/" \
    && ln --symbolic "${GRADLE_HOME}/bin/gradle" /usr/bin/gradle \
    \
    && echo "Testing Gradle installation" \
    && gradle --version
